import { AuthService } from '../../services/auth.service';  // Import AuthService
import { authGuard } from './../../guards/auth.guard';
import { Component, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { WeatherService } from '../../services/weather.service';  // Import ƒë√∫ng WeatherService
import { HeaderComponent } from '../../shared/header/header.component';
import { FooterComponent } from '../../shared/footer/footer.component';
import { WeatherItemComponent } from '../../shared/weather-item/weather-item.component';
import { FavoriteLocationsComponent } from '../../shared/favorite-locations/favorite-locations.component';


@Component({
  selector: 'app-home',
  standalone: true,
  imports: [CommonModule, HeaderComponent, FooterComponent, WeatherItemComponent, FavoriteLocationsComponent],
  providers: [WeatherService],  // Cung c·∫•p WeatherService t·∫°i ƒë√¢y
  templateUrl: './home.component.html',
  styleUrls: ['./home.component.css']
})
export class HomeComponent implements OnInit {
  isLoggedIn: boolean = false; // Bi·∫øn ƒë·ªÉ ki·ªÉm tra tr·∫°ng th√°i ƒëƒÉng nh·∫≠p
  title = 'Th·ªùi ti·∫øt h√¥m nay';
  favoriteCities: any[] = [];  // Kh·ªüi t·∫°o v·ªõi m·∫£ng r·ªóng
  cities = [
    { name: 'H√† N·ªôi', temp: 29, status: 'N·∫Øng', icon: '‚òÄÔ∏è' },
    { name: 'TP. H·ªì Ch√≠ Minh', temp: 31, status: 'Nhi·ªÅu m√¢y', icon: '‚õÖ' },
    { name: 'ƒê√† N·∫µng', temp: 27, status: 'M∆∞a nh·∫π', icon: 'üåßÔ∏è' },
    { name: 'H·∫£i Ph√≤ng', temp: 30, status: 'M∆∞a r√†o', icon: 'üå¶Ô∏è' },
    { name: 'C·∫ßn Th∆°', temp: 30, status: 'N·∫Øng n√≥ng', icon: 'üî•' },
    { name: 'B√¨nh ƒê·ªãnh', temp: 29, status: 'N·∫Øng', icon: '‚òÄÔ∏è' },
    { name: 'Qu·∫£ng Ng√£i', temp: 31, status: 'Nhi·ªÅu m√¢y', icon: '‚õÖ' },
    { name: 'Ph√∫ Y√™n', temp: 29, status: 'N·∫Øng', icon: '‚òÄÔ∏è' },
  ]

  constructor(private weatherService: WeatherService,private authService: AuthService) {}

  ngOnInit(): void {
    // Truy·ªÅn d·ªØ li·ªáu v√†o bi·∫øn favoriteCities sau khi component kh·ªüi t·∫°o
    this.favoriteCities = this.weatherService.getFavoriteCities();
    this.isLoggedIn = this.authService.isLoggedIn(); // Ki·ªÉm tra tr·∫°ng th√°i ƒëƒÉng nh·∫≠p
  }

  onAddToFavorites(city: { name: string, temp: number, status: string, icon: string }) {
    this.weatherService.addToFavorites(city);
    this.favoriteCities = [...this.weatherService.getFavoriteCities()];  // C·∫≠p nh·∫≠t danh s√°ch y√™u th√≠ch
    console.log("thoi tiet duoc them vao danh sach yeu thich",this.favoriteCities);  // Ki·ªÉm tra danh s√°ch y√™u th√≠ch
  }

  onRemoveFromFavorites(cityName: string) {
    this.weatherService.removeFromFavorites(cityName);
    this.favoriteCities = [...this.weatherService.getFavoriteCities()];  // C·∫≠p nh·∫≠t danh s√°ch y√™u th√≠ch
  }
}
